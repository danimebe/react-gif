{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGIfs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","apiUrl","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","getImages","console","log","useFetchGifs","GifExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"oMAqCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAevC,OACI,uBACIC,SAVa,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAIlB,UAGI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,UAoBnB,kD,8BC5BCG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACF,GAERC,EAJa,iDAIsCC,UAAUH,GAJhD,kBAEL,GAFK,oBACH,oCADG,SAMAI,MAAMF,GANN,cAMbG,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAbvB,kBAgBZL,GAhBY,4CAAH,sDCWLQ,EATK,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC9B,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCuBDQ,EAzBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAU,YACS,uCAAG,4BAAAvB,EAAA,sEACKF,EAAQC,GADb,OACRQ,EADQ,OAEde,EAAS,2BACFD,GADC,IAEJf,KAAMC,EACNa,SAAS,KALC,2CAAH,qDAQfI,GACAC,QAAQC,IAAIL,KAEb,CAACtB,IAEGsB,EDlB2BM,CAAa5B,GAAjCc,EAFgB,EAEtBP,KAAcc,EAFQ,EAERA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAE/CqB,EACI,2CACA,qBAAKJ,UAAU,YAAf,SAEQH,EAAOL,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEgB9BkB,EA9BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,iBAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAYvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAACT,EAAU8B,GAAX,OACX,cAAC,EAAD,CAAwB9B,SAAUA,GAApBA,Y,MCpBtC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.86182e40.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        };\r\n    }\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            <h2>Add Category</h2>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category) => {\r\n    const API_KEY = 'GWHTqPdAdBYYExo517GXGa2uHjX0eaPF';\r\n    const limit = 10;\r\n\r\n    const apiUrl = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${API_KEY}`;\r\n\r\n    const resp = await fetch(apiUrl);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGIfs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {\r\n                loading ?\r\n                    <p>Loading...</p> :\r\n                    <div className=\"card-grid\">\r\n                        {\r\n                            images.map((img) => (\r\n                                <GifGridItem\r\n                                    key={img.id}\r\n                                    {...img}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        const getImages = async () => {\r\n            const gifs = await getGifs(category);\r\n            setState({\r\n                ...state,\r\n                data: gifs,\r\n                loading: false,\r\n            });\r\n        }\r\n        getImages();\r\n        console.log(state);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Harry Potter']);\r\n\r\n    /*  const handleAdd = (serie) => {\r\n         setCategories([\r\n             ...categories,\r\n             serie\r\n         ]);\r\n     } */\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category, i) => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}